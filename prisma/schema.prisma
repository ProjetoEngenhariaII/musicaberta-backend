// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  name        String
  email       String     @unique
  createdAt   DateTime   @default(now())
  bio         String
  roles       String[]
  instruments String[]
  avatarUrl   String
  Sheet       Sheet[]
  Favorite    Favorite[]
  Request     Request[]

  @@map("users")
}

model Sheet {
  id         String     @id @default(cuid())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String
  songWriter String
  pdfUrl     String
  mp3Url     String
  badges     String[]
  userId     String
  user       User       @relation(fields: [userId], references: [id])
  Favorite   Favorite[]
  requestId  String?
  request    Request?   @relation(fields: [requestId], references: [id])

  @@index([userId])
  @@map("sheets")
}

model Favorite {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId  String
  sheetId String
  user    User   @relation(fields: [userId], references: [id])
  sheet   Sheet  @relation(fields: [sheetId], references: [id], onDelete: Cascade)

  @@unique([userId, sheetId])
  @@index([userId])
  @@map("favorites")
}

model Request {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String
  badges      String
  status      String   @default("PENDING")
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  Sheet       Sheet[]

  @@index([userId])
  @@map("requests")
}
